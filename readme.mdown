# Stubble
### Trimmed down {{mustache}} templates in .NET
[![Build Status](https://img.shields.io/appveyor/ci/Romanx/Stubble.svg?style=flat-square)](https://ci.appveyor.com/project/Romanx/stubble/)
[![Coverage Status](https://img.shields.io/coveralls/Romanx/Stubble.svg?style=flat-square)](https://coveralls.io/r/Romanx/Stubble)
[![Prerelease Build Status](https://img.shields.io/nuget/vpre/Stubble.Core.svg?style=flat-square&label=nuget%20pre)](https://www.nuget.org/packages/Stubble.Core/)
[![Build Status](https://img.shields.io/nuget/v/Stubble.Core.svg?style=flat-square)](https://www.nuget.org/packages/Stubble.Core/)

Stubble is implementation of the [Mustache](http://mustache.github.com/) template system in C# (but usable from any .NET language).

For a language-agnostic overview of mustache's template syntax, see the `mustache(5)` [manpage](http://mustache.github.com/mustache.5.html).

Stubble is tested against the mustache specification and so is `v.1.1.2, including lambdas` compliant meaning that your templates in other languages will work with Stubble provided they match the spec!

It is licenced under the MIT License which can be found [here.](/licence.md)

### Why should I use Stubble?
Stubble is designed to be a spec complient mustache renderer with only the bare essentials, *you could say the rest has been trimmed down!*

Stubble provides no methods of finding your templates, no complicated logic for getting values from your objects or special types, no non-spec tags for rendering or logic and only the nessaries to make it a simple and fast parser and renderer.

### Okay I'm convinced how do I get it and use it?
At the moment stubble is in alpha but please feel free to graph it from the pre-release feed on nuget.org by clicking on the badge above! Another option is to download the source and build it yourself.

To use stubble I'd recommend reading the how to use guide [here.](https://github.com/Romanx/Stubble/wiki)

### Performance
This is only the release and these are preliminary simple tests against the closest comparable measure which is [Nustache](https://github.com/jdiamond/Nustache/).

There are three different measures:

	- Nustache (RenderToString)
	- Stubble (Without Cache)
	- Stubble (With Cache)

Stubble caches its parsed templates for speed and so one of the tests is with this cache cleared each time and another when it isn't. Nustache does no caching so the closed comparison in raw performance would be *Nustache vs Stubble (Without Cache)*.

The testing was done over 10 iterations, over a set of increments (100 | 1,000 | 10,000 | 100,000 | 1,000,000) for each library. The results are stored in TotalMiliseconds and then averaged over all the iterations for a final result for each library for each increment.

![image](https://docs.google.com/spreadsheets/d/1QRKCy1GkwvI-pZqQaqcEHRHxWTRkz0aFXSt4O-zgOIk/pubchart?oid=1144583373&format=image)
![image](https://docs.google.com/spreadsheets/d/1QRKCy1GkwvI-pZqQaqcEHRHxWTRkz0aFXSt4O-zgOIk/pubchart?oid=1298111014&format=image)

*Note:* that the bars in each group of each graph are scaled so that the fastest library is 100.

I will upload the exact timings for these graphs to google docs which will be available [here.](https://docs.google.com/spreadsheets/d/1QRKCy1GkwvI-pZqQaqcEHRHxWTRkz0aFXSt4O-zgOIk/edit?usp=sharing)

### Extensibility
Since the goal of Stubble is to provide a trimmed down bare-bones implementation the basic library will not contain any extensions to the Mustache spec and only simple ValueGetting functionality.

However in future i plan to add the ability to add integrations and overries within the Stubble core to allow the adding/overring of new tags, value accessor mappings from `Type => Value Getter Function`

These extension points will be exposed by Stubble however none will be provided so you can add in your own wonderful overrides or even include a nuget package which adds these overrides in.

This will be better documented when these have been exposed.

### Why not use [Nustache](https://github.com/jdiamond/Nustache/) instead?
If Stubble doesn't do what you want then use Nustache! It's a great tool and provides the same functionality as Stubble provides for the default Mustache spec *(I know because I'm a contributor and current maintainer of that project!)*.

However it does provide lots of extra features, such as a variety of input types, helpers and compliation which increases its complexity and some which are extensions to the Mustache spec (such as helpers) If you need any of those pieces of functionality I'd highly recommend you use Nustache... at least until there are Extensions for Stubble which provide the functionality your after!